<?
function chinese_date($year,$month,$day)
{
  $everymonth=array(
  0=>array(8,0,0,0,0,0,0,0,0,0,0,0,29,30,7,1),
  1=>array(0,29,30,29,29,30,29,30,29,30,30,30,29,0,8,2),
  2=>array(0,30,29,30,29,29,30,29,30,29,30,30,30,0,9,3),
  3=>array(5,29,30,29,30,29,29,30,29,29,30,30,29,30,10,4),
  4=>array(0,30,30,29,30,29,29,30,29,29,30,30,29,0,1,5),
  5=>array(0,30,30,29,30,30,29,29,30,29,30,29,30,0,2,6),
  6=>array(4,29,30,30,29,30,29,30,29,30,29,30,29,30,3,7),
  7=>array(0,29,30,29,30,29,30,30,29,30,29,30,29,0,4,8),
  8=>array(0,30,29,29,30,30,29,30,29,30,30,29,30,0,5,9),
  9=>array(2,29,30,29,29,30,29,30,29,30,30,30,29,30,6,10),
  10=>array(0,29,30,29,29,30,29,30,29,30,30,30,29,0,7,11),
  11=>array(6,30,29,30,29,29,30,29,29,30,30,29,30,30,8,12),
  12=>array(0,30,29,30,29,29,30,29,29,30,30,29,30,0,9,1),
  13=>array(0,30,30,29,30,29,29,30,29,29,30,29,30,0,10,2),
  14=>array(5,30,30,29,30,29,30,29,30,29,30,29,29,30,1,3),
  15=>array(0,30,29,30,30,29,30,29,30,29,30,29,30,0,2,4),
  16=>array(0,29,30,29,30,29,30,30,29,30,29,30,29,0,3,5),
  17=>array(2,30,29,29,30,29,30,30,29,30,30,29,30,29,4,6),
  18=>array(0,30,29,29,30,29,30,29,30,30,29,30,30,0,5,7),
  19=>array(7,29,30,29,29,30,29,29,30,30,29,30,30,30,6,8),
  20=>array(0,29,30,29,29,30,29,29,30,30,29,30,30,0,7,9),
  21=>array(0,30,29,30,29,29,30,29,29,30,29,30,30,0,8,10),
  22=>array(5,30,29,30,30,29,29,30,29,29,30,29,30,30,9,11),
  23=>array(0,29,30,30,29,30,29,30,29,29,30,29,30,0,10,12),
  24=>array(0,29,30,30,29,30,30,29,30,29,30,29,29,0,1,1),
  25=>array(4,30,29,30,29,30,30,29,30,30,29,30,29,30,2,2),
  26=>array(0,29,29,30,29,30,29,30,30,29,30,30,29,0,3,3),
  27=>array(0,30,29,29,30,29,30,29,30,29,30,30,30,0,4,4),
  28=>array(2,29,30,29,29,30,29,29,30,29,30,30,30,30,5,5),
  29=>array(0,29,30,29,29,30,29,29,30,29,30,30,30,0,6,6),
  30=>array(6,29,30,30,29,29,30,29,29,30,29,30,30,29,7,7),
  31=>array(0,30,30,29,30,29,30,29,29,30,29,30,29,0,8,8),
  32=>array(0,30,30,30,29,30,29,30,29,29,30,29,30,0,9,9),
  33=>array(5,29,30,30,29,30,30,29,30,29,30,29,29,30,10,10),
  34=>array(0,29,30,29,30,30,29,30,29,30,30,29,30,0,1,11),
  35=>array(0,29,29,30,29,30,29,30,30,29,30,30,29,0,2,12),
  36=>array(3,30,29,29,30,29,29,30,30,29,30,30,30,29,3,1),
  37=>array(0,30,29,29,30,29,29,30,29,30,30,30,29,0,4,2),
  38=>array(7,30,30,29,29,30,29,29,30,29,30,30,29,30,5,3),
  39=>array(0,30,30,29,29,30,29,29,30,29,30,29,30,0,6,4),
  40=>array(0,30,30,29,30,29,30,29,29,30,29,30,29,0,7,5),
  41=>array(6,30,30,29,30,30,29,30,29,29,30,29,30,29,8,6),
  42=>array(0,30,29,30,30,29,30,29,30,29,30,29,30,0,9,7),
  43=>array(0,29,30,29,30,29,30,30,29,30,29,30,29,0,10,8),
  44=>array(4,30,29,30,29,30,29,30,29,30,30,29,30,30,1,9),
  45=>array(0,29,29,30,29,29,30,29,30,30,30,29,30,0,2,10),
  46=>array(0,30,29,29,30,29,29,30,29,30,30,29,30,0,3,11),
  47=>array(2,30,30,29,29,30,29,29,30,29,30,29,30,30,4,12),
  48=>array(0,30,29,30,29,30,29,29,30,29,30,29,30,0,5,1),
  49=>array(7,30,29,30,30,29,30,29,29,30,29,30,29,30,6,2),
  50=>array(0,29,30,30,29,30,30,29,29,30,29,30,29,0,7,3),
  51=>array(0,30,29,30,30,29,30,29,30,29,30,29,30,0,8,4),
  52=>array(5,29,30,29,30,29,30,29,30,30,29,30,29,30,9,5),
  53=>array(0,29,30,29,29,30,30,29,30,30,29,30,29,0,10,6),
  54=>array(0,30,29,30,29,29,30,29,30,30,29,30,30,0,1,7),
  55=>array(3,29,30,29,30,29,29,30,29,30,29,30,30,30,2,8),
  56=>array(0,29,30,29,30,29,29,30,29,30,29,30,30,0,3,9),
  57=>array(8,30,29,30,29,30,29,29,30,29,30,29,30,29,4,10),
  58=>array(0,30,30,30,29,30,29,29,30,29,30,29,30,0,5,11),
  59=>array(0,29,30,30,29,30,29,30,29,30,29,30,29,0,6,12),
  60=>array(6,30,29,30,29,30,30,29,30,29,30,29,30,29,7,1),
  61=>array(0,30,29,30,29,30,29,30,30,29,30,29,30,0,8,2),
  62=>array(0,29,30,29,29,30,29,30,30,29,30,30,29,0,9,3),
  63=>array(4,30,29,30,29,29,30,29,30,29,30,30,30,29,10,4),
  64=>array(0,30,29,30,29,29,30,29,30,29,30,30,30,0,1,5),
  65=>array(0,29,30,29,30,29,29,30,29,29,30,30,29,0,2,6),
  66=>array(3,30,30,30,29,30,29,29,30,29,29,30,30,29,3,7),
  67=>array(0,30,30,29,30,30,29,29,30,29,30,29,30,0,4,8),
  68=>array(7,29,30,29,30,30,29,30,29,30,29,30,29,30,5,9),
  69=>array(0,29,30,29,30,29,30,30,29,30,29,30,29,0,6,10),
  70=>array(0,30,29,29,30,29,30,30,29,30,30,29,30,0,7,11),
  71=>array(5,29,30,29,29,30,29,30,29,30,30,30,29,30,8,12),
  72=>array(0,29,30,29,29,30,29,30,29,30,30,29,30,0,9,1),
  73=>array(0,30,29,30,29,29,30,29,29,30,30,29,30,0,10,2),
  74=>array(4,30,30,29,30,29,29,30,29,29,30,30,29,30,1,3),
  75=>array(0,30,30,29,30,29,29,30,29,29,30,29,30,0,2,4),
  76=>array(8,30,30,29,30,29,30,29,30,29,29,30,29,30,3,5),
  77=>array(0,30,29,30,30,29,30,29,30,29,30,29,29,0,4,6),
  78=>array(0,30,29,30,30,29,30,30,29,30,29,30,29,0,5,7),
  79=>array(6,30,29,29,30,29,30,30,29,30,30,29,30,29,6,8),
  80=>array(0,30,29,29,30,29,30,29,30,30,29,30,30,0,7,9),
  81=>array(0,29,30,29,29,30,29,29,30,30,29,30,30,0,8,10),
  82=>array(4,30,29,30,29,29,30,29,29,30,29,30,30,30,9,11),
  83=>array(0,30,29,30,29,29,30,29,29,30,29,30,30,0,10,12),
  84=>array(10,30,29,30,30,29,29,30,29,29,30,29,30,30,1,1),
  85=>array(0,29,30,30,29,30,29,30,29,29,30,29,30,0,2,2),
  86=>array(0,29,30,30,29,30,30,29,30,29,30,29,29,0,3,3),
  87=>array(6,30,29,30,29,30,30,29,30,30,29,30,29,29,4,4),
  88=>array(0,30,29,30,29,30,29,30,30,29,30,30,29,0,5,5),
  89=>array(0,30,29,29,30,29,29,30,30,29,30,30,30,0,6,6),
  90=>array(5,29,30,29,29,30,29,29,30,29,30,30,30,30,7,7),
  91=>array(0,29,30,29,29,30,29,29,30,29,30,30,30,0,8,8),
  92=>array(0,29,30,30,29,29,30,29,29,30,29,30,30,0,9,9),
  93=>array(3,29,30,30,29,30,29,30,29,29,30,29,30,29,10,10),
  94=>array(0,30,30,30,29,30,29,30,29,29,30,29,30,0,1,11),
  95=>array(8,29,30,30,29,30,29,30,30,29,29,30,29,30,2,12),
  96=>array(0,29,30,29,30,30,29,30,29,30,30,29,29,0,3,1),
  97=>array(0,30,29,30,29,30,29,30,30,29,30,30,29,0,4,2),
  98=>array(5,30,29,29,30,29,29,30,30,29,30,30,29,30,5,3),
  99=>array(0,30,29,29,30,29,29,30,29,30,30,30,29,0,6,4),
  100=>array(0,30,30,29,29,30,29,29,30,29,30,30,29,0,7,5),
  101=>array(4,30,30,29,30,29,30,29,29,30,29,30,29,30,8,6),
  102=>array(0,30,30,29,30,29,30,29,29,30,29,30,29,0,9,7),
  103=>array(0,30,30,29,30,30,29,30,29,29,30,29,30,0,10,8),
  104=>array(2,29,30,29,30,30,29,30,29,30,29,30,29,30,1,9),
  105=>array(0,29,30,29,30,29,30,30,29,30,29,30,29,0,2,10),
  106=>array(7,30,29,30,29,30,29,30,29,30,30,29,30,30,3,11),
  107=>array(0,29,29,30,29,29,30,29,30,30,30,29,30,0,4,12),
  108=>array(0,30,29,29,30,29,29,30,29,30,30,29,30,0,5,1),
  109=>array(5,30,30,29,29,30,29,29,30,29,30,29,30,30,6,2),
  110=>array(0,30,29,30,29,30,29,29,30,29,30,29,30,0,7,3),
  111=>array(0,30,29,30,30,29,30,29,29,30,29,30,29,0,8,4),
  112=>array(4,30,29,30,30,29,30,29,30,29,30,29,30,29,9,5),
  113=>array(0,30,29,30,29,30,30,29,30,29,30,29,30,0,10,6),
  114=>array(9,29,30,29,30,29,30,29,30,30,29,30,29,30,1,7),
  115=>array(0,29,30,29,29,30,29,30,30,30,29,30,29,0,2,8),
  116=>array(0,30,29,30,29,29,30,29,30,30,29,30,30,0,3,9),
  117=>array(6,29,30,29,30,29,29,30,29,30,29,30,30,30,4,10),
  118=>array(0,29,30,29,30,29,29,30,29,30,29,30,30,0,5,11),
  119=>array(0,30,29,30,29,30,29,29,30,29,29,30,30,0,6,12),
  120=>array(4,29,30,30,30,29,30,29,29,30,29,30,29,30,7,1)
  );
  ##############################
  #农历天干
  $mten=array("null",_("甲"),_("乙"),_("丙"),_("丁"),_("戊"),_("己"),_("庚"),_("辛"),_("壬"),_("癸"));
  #农历地支
  $mtwelve=array("null",_("子（鼠）"),_("丑（牛）"),_("寅（虎）"),_("卯（兔）"),_("辰（龙）"),
                 _("巳（蛇）"),_("午（马）"),_("未（羊）"),_("申（猴）"),_("酉（鸡）"),_("戌（狗）"),_("亥（猪）"));
  #农历月份
  $mmonth=array(_("闰"),_("正"),_("二"),_("三"),_("四"),_("五"),_("六"),
                _("七"),_("八"),_("九"),_("十"),_("十一"),_("十二"),_("月"));
  #农历日
  $mday=array("null",_("初一"),_("初二"),_("初三"),_("初四"),_("初五"),_("初六"),_("初七"),_("初八"),_("初九"),_("初十"),
              _("十一"),_("十二"),_("十三"),_("十四"),_("十五"),_("十六"),_("十七"),_("十八"),_("十九"),_("二十"),
              _("廿一"),_("廿二"),_("廿三"),_("廿四"),_("廿五"),_("廿六"),_("廿七"),_("廿八"),_("廿九"),_("三十"));
  
  ##############################
  #赋给初值
  #农历日
  $md=0;
  #农历月
  $mm=0;
  #阳历总天数 至1900年12月21日
  $total=11;
  #阴历总天数
  $mtotal=0;

  ##############################
  #计算到所求日期阳历的总天数-自1900年12月21日始
  #先算年的和
  for ($y=1901;$y<$year;$y++)
  {
        $total+=365;
        if ($y%4==0) $total ++;
  }
  #再加当年的几个月
  switch ($month)
  {
           case 12:
                $total+=30;
           case 11:
                $total+=31;
           case 10:
                $total+=30;
           case 9:
                $total+=31;
           case 8:
                $total+=31;
           case 7:
                $total+=30;
           case 6:
                $total+=31;
           case 5:
                $total+=30;
           case 4:
                $total+=31;
           case 3:
                $total+=28;
           case 2:
                $total+=31;
  }

  #如果当年是闰年还要加一天
  if ($year%4==0 and $month>2)
       $total++;

  ##############################
  #用农历的天数累加来判断是否超过阳历的天数
  $flag1=0;#判断跳出循环的条件
  $j=0;
  while ($j<=120)
  {
        $i=1;
        while ($i<=13)
        {
              $mtotal+=$everymonth[$j][$i];
              if ($mtotal>=$total)
              {
                   $flag1=1;
                   break;
              }
              $i++;
        }
        if ($flag1==1) break;
        $j++;
  }

  ##############################
  #计算所求月份1号的农历日期
  $md=$everymonth[$j][$i]-($mtotal-$total);

  #是否跨越一年
  switch ($month)
  {
           case 1:
           case 3:
           case 5:
           case 7:
           case 8:
           case 10:
           case 12:
                $dd=31;
                break;
           case 4:
           case 6:
           case 9:
           case 11:
                $dd=30;
                break;
           case 2:
                if ($year%4==0)
                {
                    $dd=29;
                }
                else
                {
                    $dd=28;
                }
                break;
  }

  #根据1号的情况，计算指定日的农历日
  $day_i=1;
  while ($day_i<$day)
  {
     $day_i++;
     $md++;
     if ($md>$everymonth[$j][$i])
     {
          $md=1;
          $i++;
     }
     if (($i>12 and $everymonth[$j][0]==0) or ($i>13 and $everymonth[$j][0]<>0))
     {
           $i=1;
           $j++;
     }
  }

  #计算农历月
  if ($everymonth[$j][0]<>0 and $everymonth[$j][0]<$i)
      $mm=$i-1;
  else
      $mm=$i;

  if ($i==$everymonth[$j][0]+1 and $everymonth[$j][0]<>0)
      $chi=$mmonth[0];#闰

  $chi.=$mmonth[$mm].$mmonth[13].$mday[$md];
  
  return $chi;
}

function is_festival($mdate)
{
  $mfestival=array(_("正月初一")=>_("春节"),_("正月十五")=>_("元宵节"),_("五月初五")=>_("端午节"),_("七月初七")=>_("七夕"),_("八月十五")=>_("中秋节"),_("九月初九")=>_("重阳节"),_("十二月初八")=>_("腊八节"),_("十二月廿三")=>_("小年"));
  return $mfestival[$mdate];
}

function is_holiday($date)
{
  $date=explode("-",$date);
  list($year,$month,$date,$H,$M,$S) = DateTimeEx(hexdec(dechex(mktimeEx(0,0,0,$date[1],$date[2],$date[0]))));
  $md=$month.$date;
  $holiday=array("0101"=>_("新年元旦"),"0214"=>_("情人节"),"0308"=>_("妇女节"),"0312"=>_("植树节"),"0315"=>_("消费者权益日"),"0401"=>_("愚人节"),"0501"=>_("五一劳动节"),"0504"=>_("青年节"),"0601"=>_("儿童节"),"0701"=>_("建党节"),"0801"=>_("建军节"),"0910"=>_("教师节"),"1001"=>_("国庆节"),"1224"=>_("平安夜"),"1225"=>_("圣诞节"));
  return $holiday[$md];
}

/*************************************************
两个日期时间的扩展函数, 用于支持2038年后的时间值
*************************************************/
/*
   用途:传时间秒数,所到一个年月日时分秒数组
   原型:array myTime(int $t);
*/
function DateTimeEx($t) 
{
   //2147483647 = 2^16-1; 为php接受的最大整数
   if($t <= 2147483647){ 
      return explode(',',  date('Y,m,d,H,i,s',$t));
   }
   $t -=   2145888000; // 2038-1-1 0:00:00
   $ds = floor($t / 86400);//天数
   $year=2038;
   $month=1;
   $date=1;
   $is_366=false;
   while($ds>=365){
      $is_366 = (0==($year & 3) && $year%100)|| 0==($year%400);
      if($is_366){//闰年
         if($ds>=366)$ds -= 366;
         else break;
      }else{
         $ds -= 365;
      }
      $year++;
   }
   $days_of_month=array(31,28,31,30,31,30,31,31,30,31,30,31);
   if($is_366){
      $days_of_month[1]=29;
   }
   for($i=0;$i<12;$i++){
      if($ds>=$days_of_month[$i]){
         $month++;
         $ds -= $days_of_month[$i];
      }else{
         $date +=$ds;
         break;
      }
   }

   $mod = $t % 86400;
   $H = floor($mod / 3600);//时
   $mod = $mod % 3600;
   $M = floor($mod / 60);//分
   $S = $mod % 60;//秒
   return array($year,$month,$date,$H,$M,$S);
}
/*
   用途:获取时间秒数
   原型: int mktimeEx([int $hour[,int $minute[,int $second[,int $month[,int $date[,int $year]]]]]]);

*/
function mktimeEx()
{
   $args = func_get_args();
   switch(func_num_args()){
      case 0:return time();
      case 1:return mktime($args[0]);
      case 2:return mktime($args[0],$args[1]);
      case 3:return mktime($args[0],$args[1],$args[2]);
      case 4:return mktime($args[0],$args[1],$args[2],$args[3]);
      case 5:return mktime($args[0],$args[1],$args[2],$args[3],$args[4]);
      default : if($args[5]<2038) return mktime($args[0],$args[1],$args[2],$args[3],$args[4],$args[5]);
   }
   $t = 2145888000;
   $year = 2038;
   $is_366=false;
   while($year < $args[5]){
      $is_366 = (0==($year & 3) && $year%100)|| 0==($year%400);
      $t += $is_366? 31536000:31622400;
      $year++;
   }
   if($is_366) $months=array(0,2678400,5097600,7776000,10368000,13046400,15638400,18316800,20995200,23587200,26265600,28857600,31536000);
   else   $months=array(0,2678400,5184000,7862400,10454400,13132800,15724800,18403200,21081600,23673600,26352000,28944000,31622400);
   $t += $months[min(11, $args[3]-1)]; 
   $t += 86400 * ($args[4]-1);
   $t += $args[0]*3600 + $args[1]*60 + $args[2];
   return $t;
}

function Solar2LunarDate($solar_date)
{
  $solar_date = explode("-", $solar_date);
  $year = intval($solar_date[0]);
  $month = intval($solar_date[1]);
  $day = intval($solar_date[2]);
  
  if(!checkdate($month, $day, $year))
     return FALSE;
  
  $everymonth=array(
  0=>array(8,0,0,0,0,0,0,0,0,0,0,0,29,30,7,1),
  1=>array(0,29,30,29,29,30,29,30,29,30,30,30,29,0,8,2),
  2=>array(0,30,29,30,29,29,30,29,30,29,30,30,30,0,9,3),
  3=>array(5,29,30,29,30,29,29,30,29,29,30,30,29,30,10,4),
  4=>array(0,30,30,29,30,29,29,30,29,29,30,30,29,0,1,5),
  5=>array(0,30,30,29,30,30,29,29,30,29,30,29,30,0,2,6),
  6=>array(4,29,30,30,29,30,29,30,29,30,29,30,29,30,3,7),
  7=>array(0,29,30,29,30,29,30,30,29,30,29,30,29,0,4,8),
  8=>array(0,30,29,29,30,30,29,30,29,30,30,29,30,0,5,9),
  9=>array(2,29,30,29,29,30,29,30,29,30,30,30,29,30,6,10),
  10=>array(0,29,30,29,29,30,29,30,29,30,30,30,29,0,7,11),
  11=>array(6,30,29,30,29,29,30,29,29,30,30,29,30,30,8,12),
  12=>array(0,30,29,30,29,29,30,29,29,30,30,29,30,0,9,1),
  13=>array(0,30,30,29,30,29,29,30,29,29,30,29,30,0,10,2),
  14=>array(5,30,30,29,30,29,30,29,30,29,30,29,29,30,1,3),
  15=>array(0,30,29,30,30,29,30,29,30,29,30,29,30,0,2,4),
  16=>array(0,29,30,29,30,29,30,30,29,30,29,30,29,0,3,5),
  17=>array(2,30,29,29,30,29,30,30,29,30,30,29,30,29,4,6),
  18=>array(0,30,29,29,30,29,30,29,30,30,29,30,30,0,5,7),
  19=>array(7,29,30,29,29,30,29,29,30,30,29,30,30,30,6,8),
  20=>array(0,29,30,29,29,30,29,29,30,30,29,30,30,0,7,9),
  21=>array(0,30,29,30,29,29,30,29,29,30,29,30,30,0,8,10),
  22=>array(5,30,29,30,30,29,29,30,29,29,30,29,30,30,9,11),
  23=>array(0,29,30,30,29,30,29,30,29,29,30,29,30,0,10,12),
  24=>array(0,29,30,30,29,30,30,29,30,29,30,29,29,0,1,1),
  25=>array(4,30,29,30,29,30,30,29,30,30,29,30,29,30,2,2),
  26=>array(0,29,29,30,29,30,29,30,30,29,30,30,29,0,3,3),
  27=>array(0,30,29,29,30,29,30,29,30,29,30,30,30,0,4,4),
  28=>array(2,29,30,29,29,30,29,29,30,29,30,30,30,30,5,5),
  29=>array(0,29,30,29,29,30,29,29,30,29,30,30,30,0,6,6),
  30=>array(6,29,30,30,29,29,30,29,29,30,29,30,30,29,7,7),
  31=>array(0,30,30,29,30,29,30,29,29,30,29,30,29,0,8,8),
  32=>array(0,30,30,30,29,30,29,30,29,29,30,29,30,0,9,9),
  33=>array(5,29,30,30,29,30,30,29,30,29,30,29,29,30,10,10),
  34=>array(0,29,30,29,30,30,29,30,29,30,30,29,30,0,1,11),
  35=>array(0,29,29,30,29,30,29,30,30,29,30,30,29,0,2,12),
  36=>array(3,30,29,29,30,29,29,30,30,29,30,30,30,29,3,1),
  37=>array(0,30,29,29,30,29,29,30,29,30,30,30,29,0,4,2),
  38=>array(7,30,30,29,29,30,29,29,30,29,30,30,29,30,5,3),
  39=>array(0,30,30,29,29,30,29,29,30,29,30,29,30,0,6,4),
  40=>array(0,30,30,29,30,29,30,29,29,30,29,30,29,0,7,5),
  41=>array(6,30,30,29,30,30,29,30,29,29,30,29,30,29,8,6),
  42=>array(0,30,29,30,30,29,30,29,30,29,30,29,30,0,9,7),
  43=>array(0,29,30,29,30,29,30,30,29,30,29,30,29,0,10,8),
  44=>array(4,30,29,30,29,30,29,30,29,30,30,29,30,30,1,9),
  45=>array(0,29,29,30,29,29,30,29,30,30,30,29,30,0,2,10),
  46=>array(0,30,29,29,30,29,29,30,29,30,30,29,30,0,3,11),
  47=>array(2,30,30,29,29,30,29,29,30,29,30,29,30,30,4,12),
  48=>array(0,30,29,30,29,30,29,29,30,29,30,29,30,0,5,1),
  49=>array(7,30,29,30,30,29,30,29,29,30,29,30,29,30,6,2),
  50=>array(0,29,30,30,29,30,30,29,29,30,29,30,29,0,7,3),
  51=>array(0,30,29,30,30,29,30,29,30,29,30,29,30,0,8,4),
  52=>array(5,29,30,29,30,29,30,29,30,30,29,30,29,30,9,5),
  53=>array(0,29,30,29,29,30,30,29,30,30,29,30,29,0,10,6),
  54=>array(0,30,29,30,29,29,30,29,30,30,29,30,30,0,1,7),
  55=>array(3,29,30,29,30,29,29,30,29,30,29,30,30,30,2,8),
  56=>array(0,29,30,29,30,29,29,30,29,30,29,30,30,0,3,9),
  57=>array(8,30,29,30,29,30,29,29,30,29,30,29,30,29,4,10),
  58=>array(0,30,30,30,29,30,29,29,30,29,30,29,30,0,5,11),
  59=>array(0,29,30,30,29,30,29,30,29,30,29,30,29,0,6,12),
  60=>array(6,30,29,30,29,30,30,29,30,29,30,29,30,29,7,1),
  61=>array(0,30,29,30,29,30,29,30,30,29,30,29,30,0,8,2),
  62=>array(0,29,30,29,29,30,29,30,30,29,30,30,29,0,9,3),
  63=>array(4,30,29,30,29,29,30,29,30,29,30,30,30,29,10,4),
  64=>array(0,30,29,30,29,29,30,29,30,29,30,30,30,0,1,5),
  65=>array(0,29,30,29,30,29,29,30,29,29,30,30,29,0,2,6),
  66=>array(3,30,30,30,29,30,29,29,30,29,29,30,30,29,3,7),
  67=>array(0,30,30,29,30,30,29,29,30,29,30,29,30,0,4,8),
  68=>array(7,29,30,29,30,30,29,30,29,30,29,30,29,30,5,9),
  69=>array(0,29,30,29,30,29,30,30,29,30,29,30,29,0,6,10),
  70=>array(0,30,29,29,30,29,30,30,29,30,30,29,30,0,7,11),
  71=>array(5,29,30,29,29,30,29,30,29,30,30,30,29,30,8,12),
  72=>array(0,29,30,29,29,30,29,30,29,30,30,29,30,0,9,1),
  73=>array(0,30,29,30,29,29,30,29,29,30,30,29,30,0,10,2),
  74=>array(4,30,30,29,30,29,29,30,29,29,30,30,29,30,1,3),
  75=>array(0,30,30,29,30,29,29,30,29,29,30,29,30,0,2,4),
  76=>array(8,30,30,29,30,29,30,29,30,29,29,30,29,30,3,5),
  77=>array(0,30,29,30,30,29,30,29,30,29,30,29,29,0,4,6),
  78=>array(0,30,29,30,30,29,30,30,29,30,29,30,29,0,5,7),
  79=>array(6,30,29,29,30,29,30,30,29,30,30,29,30,29,6,8),
  80=>array(0,30,29,29,30,29,30,29,30,30,29,30,30,0,7,9),
  81=>array(0,29,30,29,29,30,29,29,30,30,29,30,30,0,8,10),
  82=>array(4,30,29,30,29,29,30,29,29,30,29,30,30,30,9,11),
  83=>array(0,30,29,30,29,29,30,29,29,30,29,30,30,0,10,12),
  84=>array(10,30,29,30,30,29,29,30,29,29,30,29,30,30,1,1),
  85=>array(0,29,30,30,29,30,29,30,29,29,30,29,30,0,2,2),
  86=>array(0,29,30,30,29,30,30,29,30,29,30,29,29,0,3,3),
  87=>array(6,30,29,30,29,30,30,29,30,30,29,30,29,29,4,4),
  88=>array(0,30,29,30,29,30,29,30,30,29,30,30,29,0,5,5),
  89=>array(0,30,29,29,30,29,29,30,30,29,30,30,30,0,6,6),
  90=>array(5,29,30,29,29,30,29,29,30,29,30,30,30,30,7,7),
  91=>array(0,29,30,29,29,30,29,29,30,29,30,30,30,0,8,8),
  92=>array(0,29,30,30,29,29,30,29,29,30,29,30,30,0,9,9),
  93=>array(3,29,30,30,29,30,29,30,29,29,30,29,30,29,10,10),
  94=>array(0,30,30,30,29,30,29,30,29,29,30,29,30,0,1,11),
  95=>array(8,29,30,30,29,30,29,30,30,29,29,30,29,30,2,12),
  96=>array(0,29,30,29,30,30,29,30,29,30,30,29,29,0,3,1),
  97=>array(0,30,29,30,29,30,29,30,30,29,30,30,29,0,4,2),
  98=>array(5,30,29,29,30,29,29,30,30,29,30,30,29,30,5,3),
  99=>array(0,30,29,29,30,29,29,30,29,30,30,30,29,0,6,4),
  100=>array(0,30,30,29,29,30,29,29,30,29,30,30,29,0,7,5),
  101=>array(4,30,30,29,30,29,30,29,29,30,29,30,29,30,8,6),
  102=>array(0,30,30,29,30,29,30,29,29,30,29,30,29,0,9,7),
  103=>array(0,30,30,29,30,30,29,30,29,29,30,29,30,0,10,8),
  104=>array(2,29,30,29,30,30,29,30,29,30,29,30,29,30,1,9),
  105=>array(0,29,30,29,30,29,30,30,29,30,29,30,29,0,2,10),
  106=>array(7,30,29,30,29,30,29,30,29,30,30,29,30,30,3,11),
  107=>array(0,29,29,30,29,29,30,29,30,30,30,29,30,0,4,12),
  108=>array(0,30,29,29,30,29,29,30,29,30,30,29,30,0,5,1),
  109=>array(5,30,30,29,29,30,29,29,30,29,30,29,30,30,6,2),
  110=>array(0,30,29,30,29,30,29,29,30,29,30,29,30,0,7,3),
  111=>array(0,30,29,30,30,29,30,29,29,30,29,30,29,0,8,4),
  112=>array(4,30,29,30,30,29,30,29,30,29,30,29,30,29,9,5),
  113=>array(0,30,29,30,29,30,30,29,30,29,30,29,30,0,10,6),
  114=>array(9,29,30,29,30,29,30,29,30,30,29,30,29,30,1,7),
  115=>array(0,29,30,29,29,30,29,30,30,30,29,30,29,0,2,8),
  116=>array(0,30,29,30,29,29,30,29,30,30,29,30,30,0,3,9),
  117=>array(6,29,30,29,30,29,29,30,29,30,29,30,30,30,4,10),
  118=>array(0,29,30,29,30,29,29,30,29,30,29,30,30,0,5,11),
  119=>array(0,30,29,30,29,30,29,29,30,29,29,30,30,0,6,12),
  120=>array(4,29,30,30,30,29,30,29,29,30,29,30,29,30,7,1)
  );
  
  ##############################
  #赋给初值
  #农历日
  $md=0;
  #农历月
  $mm=0;
  #阳历总天数 至1900年12月21日
  $total=11;
  #阴历总天数
  $mtotal=0;

  ##############################
  #计算到所求日期阳历的总天数-自1900年12月21日始
  #先算年的和
  for ($y=1901;$y<$year;$y++)
  {
        $total+=365;
        if ($y%4==0) $total ++;
  }
  #再加当年的几个月
  switch ($month)
  {
           case 12:
                $total+=30;
           case 11:
                $total+=31;
           case 10:
                $total+=30;
           case 9:
                $total+=31;
           case 8:
                $total+=31;
           case 7:
                $total+=30;
           case 6:
                $total+=31;
           case 5:
                $total+=30;
           case 4:
                $total+=31;
           case 3:
                $total+=28;
           case 2:
                $total+=31;
  }

  #如果当年是闰年还要加一天
  if ($year%4==0 and $month>2)
       $total++;

  ##############################
  #用农历的天数累加来判断是否超过阳历的天数
  $flag1=0;#判断跳出循环的条件
  $j=0;
  while ($j<=120)
  {
        $i=1;
        while ($i<=13)
        {
              $mtotal+=$everymonth[$j][$i];
              if ($mtotal>=$total)
              {
                   $flag1=1;
                   break;
              }
              $i++;
        }
        if ($flag1==1) break;
        $j++;
  }

  ##############################
  #计算所求月份1号的农历日期
  $md=$everymonth[$j][$i]-($mtotal-$total);

  #是否跨越一年
  switch ($month)
  {
           case 1:
           case 3:
           case 5:
           case 7:
           case 8:
           case 10:
           case 12:
                $dd=31;
                break;
           case 4:
           case 6:
           case 9:
           case 11:
                $dd=30;
                break;
           case 2:
                if ($year%4==0)
                {
                    $dd=29;
                }
                else
                {
                    $dd=28;
                }
                break;
  }

  #根据1号的情况，计算指定日的农历日
  $day_i=1;
  while ($day_i<$day)
  {
     $day_i++;
     $md++;
     if ($md>$everymonth[$j][$i])
     {
          $md=1;
          $i++;
     }
     if (($i>12 and $everymonth[$j][0]==0) or ($i>13 and $everymonth[$j][0]<>0))
     {
           $i=1;
           $j++;
     }
  }

  #计算农历月
  if ($everymonth[$j][0]<>0 and $everymonth[$j][0]<$i)
      $mm=$i-1;
  else
      $mm=$i;

  if($mm >= $month)
     $year--;

//  if ($i==$everymonth[$j][0]+1 and $everymonth[$j][0]<>0)
//      $chi=$mmonth[0];#闰

  return $year."-".$mm."-".$md;
}
?>